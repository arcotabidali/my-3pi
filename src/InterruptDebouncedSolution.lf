target C {
    platform: {
      name: "rp2040",
      board: "pololu_3pi_2040_robot"
    },
    threading: false,
    keepalive: true
  }
  
  preamble {=
    #include <stdio.h>
    #include <pico/stdlib.h>
    #include <hardware/gpio.h>
  =}

main reactor {
    preamble {=
    static void* action;
        void gpio_callback(uint gpio, uint32_t events) 
        {
            // Put the GPIO event(s) that just happened into event_str
            // so we can print it
            //instead of below option, one could have used the physical time for spacing.
            lf_schedule(action, 0);
        }

    =}

    physical action a(0, 200 msec, "drop");
    state prev_time_elapsed : interval_t=0.0;
    
    reaction(startup) -> a {=
        //initialize the interrupt and pass the callback function
        action = a;
        gpio_set_irq_enabled_with_callback(PICO_DEFAULT_LED_PIN, GPIO_IRQ_EDGE_FALL, true, &gpio_callback);

    =}

    reaction(a) {=
        interval_t time_elapsed=0.0;
        interval_t current_time_elapsed = lf_time_logical_elapsed();
        if(self->prev_time_elapsed!= 0.0)
        {
           time_elapsed = current_time_elapsed - self->prev_time_elapsed;
        }

        self->prev_time_elapsed = current_time_elapsed;      

        
        printf("Logical time elapsed since the last button pushed: %lld msec\n", time_elapsed/1000000.0);
    =}

}